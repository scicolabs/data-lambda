{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Template - Reference S3/Lambda Processing Stack: This template builds a reference data processing pipeline triggered by S3 Object Created events for all objects, and implemented by a custom Lambda Python function.",

  "Parameters" : {
    "LambdaFunctionName" : {
      "Description" : "Name of the data processing Lambda Function",
      "Type" : "String",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "HappyData"
    },
    "LambdaHandler" : {
      "Description" : "Name of the Lambda Handler in the deployment package",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "parseMarsisData.chompData"
    },
    "S3EventSource" : {
      "Description" : "The S3 bucket acting as the event source",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "marvel.acwhite.aws"
    },
    "S3EventSourcePrefix" : {
      "Description" : "S3 prefix to filter S3 events on",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "marsis/"
    },
    "S3LambdaDeploymentPackageKey" : {
      "Description" : "The key to the lambda deployment package",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "lambda/dataprocessor.zip"
    },
    "S3LambdaDeploymentPackageBucket" : {
      "Description" : "The S3 bucket containing the lambda deployment package",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "2048",
      "ConstraintDescription" : "must contain only alphanumberic characters",
      "Default" : "marvel.acwhite.aws"
    },
    "LambdaTimeout" : {
      "Description" : "The timeout in seconds for the processing lambda function",
      "Type" : "String",
      "AllowedPattern" : "[0-9]*",
      "MinLength": "1",
      "MaxLength": "9",
      "ConstraintDescription" : "must contain only numeric characters",
      "Default" : "60"
    }
  },

  "Resources" : {
    "DataProcessorRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
               "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        },
        "Path": "/",

        "Policies": [ {
           "PolicyName": "root",
           "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:*"
                ],
                "Resource": [
                  "arn:aws:s3:::*"
                ]
              } ]
           }
        } ]

      }
    },

    "DataProcessor" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "S3Bucket": { "Ref" : "S3LambdaDeploymentPackageBucket" },
          "S3Key": { "Ref" : "S3LambdaDeploymentPackageKey" }
        },
        "Description" : { "Ref" : "LambdaFunctionName" },
        "Handler" : { "Ref" : "LambdaHandler" },
        "MemorySize" : "1536",
        "Role" : { "Fn::GetAtt" : ["DataProcessorRole", "Arn"] },
        "Runtime" : "python2.7",
        "Timeout" : { "Ref" : "LambdaTimeout" }
      }
    }
  },

  "Outputs" : {
    "DataProcessorFunction" : {
      "Value" : { "Ref" : "DataProcessor" },
      "Description" : "Data processing Lambda function"
    },
    "DataProcessorArn" : {
      "Value" : { "Fn::GetAtt" : ["DataProcessor", "Arn"] },
      "Description" : "Data processing Lambda function ARN"
    }
  }
}
